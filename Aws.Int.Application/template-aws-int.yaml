AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Serverless Application.
Parameters:
  SecurityGroupId:
    Default: sg-064a2851bc0f10a1e
    Type: 'AWS::EC2::SecurityGroup::Id'
  SubNetId1:
    Default: subnet-037e8b801c1e77db5
    Type: 'AWS::EC2::Subnet::Id'
  SubNetId2:
    Default: subnet-0309164262b4dd853
    Type: 'AWS::EC2::Subnet::Id'
  EnvironmentType:
    Description: The environment type
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - uat
      - prod
    ConstraintDescription: 'Must be dev, uat or prod'
Mappings:
  EnvironmentVariablesMap:
    Function.Properties.CodeUri.Bucket:
      dev: vanlune-bin-dev
      uat: vanlune-bin-uat
      prod: vanlune-bin-prod
    Stage.ApiGateway:
      dev: Dev
      uat: Uat
      prod: Prod
Resources:
 # API Functinos
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !FindInMap 
        - EnvironmentVariablesMap
        - Stage.ApiGateway
        - !Ref EnvironmentType
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
        MaxAge: "'600'"
  
 #Aws.Int
  SendSns:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: vanlune-aws-int-sns
      Handler: >-
        Aws.Int.Application::Aws.Int.Application.Function::SendSns
      Runtime: dotnetcore3.1
      CodeUri:
        Bucket: !FindInMap 
          - EnvironmentVariablesMap
          - Function.Properties.CodeUri.Bucket
          - !Ref EnvironmentType
        Key: Aws.Int.zip
      MemorySize: 256
      Timeout: 900
      Role: !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':role/role-lambda-vanlune']]
      Policies:
        - AWSLambdaBasicExecutionRole
      Tracing: Active
      Events:
        HttpPost: 
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: '/aws/int/sns'
            Method: post
  GetSecret:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: vanlune-aws-int-secret
      Handler: >-
        Aws.Int.Application::Aws.Int.Application.Function::GetSecret
      Runtime: dotnetcore3.1
      CodeUri:
        Bucket: !FindInMap 
          - EnvironmentVariablesMap
          - Function.Properties.CodeUri.Bucket
          - !Ref EnvironmentType
        Key: Aws.Int.zip
      MemorySize: 256
      Timeout: 900
      Role: !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':role/role-lambda-vanlune']]
      Policies:
        - AWSLambdaBasicExecutionRole
      Tracing: Active
      Events:
        HttpPost: 
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: '/aws/int/secret'
            Method: post
  